apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-kafka3
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.kafka.size }}
  storageClassName: {{ .Values.storage.class }}
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka3
  namespace: {{ .Values.namespace }}
  labels:
    app: kafka3
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kafka3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kafka3
    spec:
      containers:
        - name: kafka3
          image: {{ .Values.image.kafka.repository }}:{{ .Values.image.kafka.tag }}
          imagePullPolicy: {{ .Values.image.kafka.pullPolicy }}
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: {{ default "" .Values.KAFKA3_LISTENERS | quote }}
            - name: KAFKA_AUTO_OFFSET_RESET
              value: "earliest"
            - name: KAFKA_BROKER_ID
              value: "3"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_DELETE_TOPIC_ENABLE
              value: "true"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:30094"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: "2000000"
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: "2"
            - name: KAFKA_NUM_PARTITIONS
              value: "30"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper1:22181,zookeeper2:32181,zookeeper3:42181"
          ports:
            - containerPort: 9092
              name: http
              protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/kafka/data
            name: vol1
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: pvc-kafka3
---
kind: Service
apiVersion: v1
metadata:
  name: kafka3
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: kafka3
  ports:
  - port: 9092
    targetPort: 9092
    nodePort: 30094
  type: NodePort
status:
  loadBalancer: {}