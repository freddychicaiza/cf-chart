apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-zookeeper2
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.zookeeper.size }}
  storageClassName: {{ .Values.storage.class }}
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper2
  namespace: {{ .Values.namespace }}
  labels:
    app: zookeeper2
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: zookeeper2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: zookeeper2
    spec:
      containers:
        - name: zookeeper2
          image: {{ .Values.image.zookeeper.repository }}:{{ .Values.image.zookeeper.tag }}
          imagePullPolicy: {{ .Values.image.zookeeper.pullPolicy }}
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_INIT_LIMIT
              value: "5"
            - name: ZOOKEEPER_SERVER_ID
              value: "2"
            - name: ZOOKEEPER_SYNC_LIMIT
              value: "2"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOO_SERVERS
              value: "server.1=zookeeper1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zookeeper3:2888:3888;2181"
          ports:
            - containerPort: 2181
              name: http
              protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/zookeeper/data
            name: vol1
        volumes:
        - name: vol1
          persistentVolumeClaim:
            claimName: pvc-zookeeper2
---
kind: Service
apiVersion: v1
metadata:
  name: zookeeper2
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: zookeeper2
  ports:
  - protocol: TCP
    port: 2181
    targetPort: 2181
  type: ClusterIP
status:
  loadBalancer: {}