apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: {{ .Values.namespace }}
  labels:
    app: prometheus
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - name: prometheus
          image: {{ .Values.image.prometheus.repository }}:{{ .Values.image.prometheus.tag }}
          imagePullPolicy: {{ .Values.image.prometheus.pullPolicy }}
          ports:
            - containerPort: 9090
              name: http
              protocol: TCP
          volumeMounts:
          - mountPath: /etc/prometheus
            name: vol1
      volumes:
      - configMap:
          name: prometheus-config
        name: vol1
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prometheus
  namespace: {{ .Values.namespace }}
spec:
  rules:
  - host: prometheus.favorita.ec
    http:
      paths:
      - path: /
        backend:
          serviceName: prometheus
          servicePort: 9090
